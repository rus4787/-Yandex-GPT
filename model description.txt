Общее:
Федеральный институт повышения квалификации продает дистанционное обучение по охране труда юридическим лицам. Продажа осуществляется менеджерами в ходе телефонных разговоров. Клиенты бывают «теплыми» - которым продажа ранее уже осуществлялась (этим клиентам звонят не реже раза в три месяца для его удержания) и «холодные» - когда клиент новый. Основной представитель клиента – это лицо принимающее решение (часто руководитель или специалист по охране труда) – именно он принимает решение покупать у института обучение или нет. Менеджер в ходе разговора выявляет потребности ЛПР на обучение и старается закрыть заявку на обучение. Если не получается должен закрыть одно из действий: «просмотр удостоверения» - если клиент не помнит кто у него обучен или когда; «изучение коммерческого предложения» - если выявили кто не обучен но клиенту надо согласовать финансирование на обучение; «согласование сроков» - если выявлена потребность и клиент готов обучаться но необходимо согласовать сроки обучения; «отправка(составление) списков» - если выявлена потребность и клиент готов учиться, но нужно составить списки обучающихся. Также клиент может запросить «перезвонить» или «направить КП» - но это действие клиента. Основными возражениями у клиента зачастую являются: «нет времени на обучение сейчас», «все сотрудники уже обучены», «нет денег», «нам это не нужно», «не доверяем дистанционному обучению», «обучаемся в другом центре». Также зачастую клиент уходит от разговора запросом КП. У института более 10 различных номенклатур обучения, и при выявлении отсутствия необходимости обучения по охране труда, менеджер начинает выявлять другие направления – экология, отходы, пожарная безопасность, первая помощь, антикоррупционная деятельность, антитеррористическая деятельность, организация государственных закупок.
Задача: разработать промт с использованием агентов, который будет оценивать:
1. По транскрипциям вытаскивать инфоповоды – так называемый модуль вовлеченности: располагается в первой части разговора (от 1 до 5 фразы менеджера обычно) и представляет фразу с которой менеджер начинает разговор с ЛПР привлекая его внимание, например: «…вы, наверное, помните, мы проводили тренинг для …. Мы также можем сделать это за вас, когда вы стали старшим специалистом по администрированию», «С марта этого года введены новые требования по обучению персонала. Все ли ваши сотрудники прошли необходимое обучение?», «Мы заметили, что у вас в этом месяце запланирована проверка. Вы в курсе об этом?», «Мы работали с похожими организациями в вашем регионе по обучению по охране труда и экологии. Как у вас обстоят дела с этим направлением?», «Ваши коллеги рекомендовали нас, и мы бы хотели обсудить ваши текущие потребности в обучении.» и т.д. Условно, инфоповоды можно разделить на категории: "Упоминание о проверке", «Изменения в законодательстве», «Обучение по требованиям», "Рекомендации от других компаний", "Изменения в клиентском поле", «Новостная повестка», «Другое».
2. Вытаскиваем из транскрипций – «результаты» которые были достигнуты в разговоре менеджером при работе с клиентами. Под «результатом» понимается закрытие заявки или действие клиента «просмотр удостоверения», «изучение коммерческого предложения», «согласование сроков», «отправка(составление) списков». Также «результат» - это то, что вызвало интерес клиента. В итоге нужно получить «результат» в виде фраз, вырезанных из транскрипций.
3. Вытаскиваем из транскрипций – «не результаты» которые были достигнуты в разговоре менеджером при работе с клиентами. Под «не результатом» понимается – любая договоренность клиента с институтом когда клиент нам сообщил что ему не нужно и мы согласились (то есть непреодолённое менеджером возражение клиента). Реплика менеджера предшествующая этому – это «описание сценария» получения «не результата». В итоге нужно получить «не результат», а также «описание сценария» в виде фраз, вырезанных из транскрипций.

Система агентов:
Первый агент - «Обработчик», второй агент – «Лейбл», третий агент – «Распределитель», четвертый агент – блок из семи агентов «Оценщик» с индексом («Оценщик_1» - работает при по лейблам «холодный», «разговор с лпр»; «Оценщик_2» - работает по лейблам «холодный», «нет лпр»; «Оценщик_3» - работает по лейблам «теплый», «разговор с лпр»; «Оценщик_4» - работает по лейблу «отказ»; «Оценщик_5» - работает по лейблу «заявка»; «Оценщик_6» - работает по лейблу «действие»; «Оценщик_7» - работает по лейблу «другое»), пятый агент – «Контроль», шестой агент – «Накопитель», седьмой агент – «Ревизор», восьмой агент - «Стилист».

Описание работы агентов:
Первый агент - «Обработчик»:
1.	Получает данные от пользователя
2.	Проверяет наличие текста в сообщении от пользователя. Если текста нет, то ставит флаг «False» и выдает уведомление пользователю. Дальше не идет.
3.	Приводит исходный текст к нижнему регистру, убирает все иностранные слова, слова и stopwords = {"ну", "как бы", "типа", "это самое", "значит", "короче", "слушай", "понимаешь", "вообще", "на самом деле", "в общем", "просто", "кстати", "эээ", "эм", "ммм", "вот", "знаешь", "получается", "собственно", "в принципе", "короче говоря", "так сказать", "ясное дело", "ну как бы", "вообще-то", "да, ну", "наверное", "кажется", "честно говоря", "в любом случае", "так вот", "между прочим", "кстати говоря", "ну ладно", "точнее", "вот это", "прямо", "то есть"}.
4.	Разбивает по ролям объединяя фразы (например у меня код: ‘’’text = text.replace("1)", "М:").replace("2)", "К:")\n result = []\n lines = text.splitlines()\n current_speaker = None\n buffer = []\n for line in lines: \n parts = re.split(r'(М:|К:)', line) \n for part in parts: \n if part in {'М:', 'К:'}:\n  if current_speaker and buffer and current_speaker != part: \n result.append(f"{current_speaker} {' '.join(buffer).strip()}")\n buffer = []\n current_speaker = part\n else:\n cleaned_part = re.sub(r'\s+', ' ', part).strip()\n if cleaned_part: \n buffer.append(cleaned_part) \n if current_speaker and buffer: \n result.append(f"{current_speaker} {' '.join(buffer).strip()}")\n processed_text = ' '.join(result)’’’).
5.	Считает количество символов с пробелами в обработанном тексте.
6.	Передает обработанный текст, количество фраз второму агенту – «Лейбл». Ставит флаг «True».
7.	Если от «Лейбл» приходит запрос на повторную обработку текста, проводит облегченную обработку текста: приводит исходный текст к нижнему регистру и заменяет титулы абонентов (text = text.replace("1)", "М:").replace("2)", "К:")). Передает новый обработанный текст «Лейбл». Ставит флаг «True».
Второй агент – «Лейбл»:
1.	Получает от «Обработчик» обработанный текст, количество символов. Ставит count=0.
2.	 Оценивает количество символов:
a.	если количество меньше 150, то ставит лейбл «короткий». Ставит флаг «False». Передает лейбл «короткий» восьмому агенту - «Стилист». Завершает работу.
b.	если количество больше 150, то Ставит флаг «True». Продолжает работу.
3.	Оценивает обработанный текст по критериям с простановкой лейблов:
a.	Тип разговора:
i.	«разговор с лпр» - если клиент и является тем, кто принимает решение на обучение
ii.	«нет лпр» - если лицо со стороны клиента не является ЛПР. Отличительная особенность: наличие фраз в начале разговора «это не я», «я не отвечаю за это», «он отсутствует» и т.д. Разговор в целом не длинный, и в нем происходит уточнение ЛПР, его нахождения или как с ним связаться.
b.	Тип клиента:
i.	«холодный» - если менеджер впервые контактирует с клиентом. Обычно это либо установление кто ЛПР или самый первый разговор с ЛПР. Отличительная особенность: менеджер устанавливает кто является ЛПР, происходит знакомство с клиентом, часто проводит полную презентацию продукта, начало разговора официальное, со стороны клиента может идти негатив;
ii.	 «теплый» - клиент уже знает об институте: то есть либо уже пользовался услугами, либо это не первый звонок клиенту. Отличительная особенность: менеджер уже часто опускает полное представление и сразу начинает разговор с напоминания о ранее достигнутых договорённостях.
c.	Если получены лейблы «теплый» И «нет лпр», то дальше не идет. Передает обработанный текст и эти лейблы восьмому агенту - «Стилист». Ставит флаг «False». Прекращает работу.
d.	Структуру разговора:
i.	 «отказ» - если клиент категорично отказывается от сотрудничества с институтом. Могут преобладать негативные эмоции у клиента. В заключительной части разговора клиент говорит об отказе от обучения, продолжения сотрудничества. Но: если клиент отказывается говорить по причине отсутствия времени это не отказ.
ii.	«заявка» - если по результату разговора достигнута договорённость о заявке на обучение. Клиент выразил согласие на нее. Отличительная особенность: «давайте подам заявку», «сформируем заявку» и т.д.
iii.	«действие» - если по результату разговора вышли на любое действие менеджера («просмотр удостоверения», «изучение коммерческого предложения», «согласование сроков», «отправка(составление) списков») или действие клиента («запрос на отправку КП», «просьба перезвонить»).
iv.	«другое» - если в разговоре есть либо новое действие, или новый тип договорённости или какие-либо действия клиента или менеджера выходящие за рамки нормального общения (нецензурная лексика, оскорбления) и т.д.
4.	Передает обработанный текст, выявленные лейблы третьему агенту – «Распределитель». Ставит флаг «True».
5.	Если ни один из лейблов не был определен – передает запрос «Обработчик» на повторную обработку исходного текста. Ставит count+=1. После повторного получения от «Обработчик» текста, снова проводит оценку текста по критериям с простановкой лейблов (т.е. переходит к п.3). Если повторно не найдены лейблы и count==1, то передает восьмому агенту - «Стилист» обработанный текст сообщение об отсутствии лейблов в тексте. Ставит флаг «False». Прекращает работу.
Третий агент – «Распределитель»: - основной агент. Отвечает за общую координацию работы агентов «Оценщик», «Контроль» и «Накопитель». Данные получает только из «Лейбл» и «Контроль».:
1.	Получает от «Лейбл» обработанный текст, список лейблов.
2.	Группирует полученные лейблы по типам «Оценщик» («Оценщик_1» - работает при по лейблам «холодный», «разговор с лпр»; «Оценщик_2» - работает по лейблам «холодный», «нет лпр»; «Оценщик_3» - работает по лейблам «теплый», «разговор с лпр»; «Оценщик_4» - работает по лейблу «отказ»; «Оценщик_5» - работает по лейблу «заявка»; «Оценщик_6» - работает по лейблу «действие»; «Оценщик_7» - работает по лейблу «другое»). Формирует список индексов «Оценщик» которые будут работать с текстом. Ставит счетчик оценщиков = количеству индексов в списке.
3.	Передает обработанный текст и список индексов «Оценщик» в пятый агент – «Контроль».
4.	Отдает по списку индексов обработанный текст соответствующим «Оценщик_n».
5.	Получает от «Контроль» текст ответа и индекс соответствующего «Оценщик_n», к которому данный ответ относится. Вносит соответствующий индекс в список индекс_отработка «Оценщик». Отдает этот текст ответа и индекс соответствующего «Оценщик_n» в шестой агент – «Накопитель».
6.	Когда длина списка индексов «Оценщик»==список индекс_отработка «Оценщик», то опрашивает соответствующих «Оценщик_n» из списка индексов «Оценщик» на флаг. Если количество вернувшихся флаг «True» == счетчик оценщиков, то спрашивает «Контроль» на флаг. Если вернулось флаг «True», то передает шестой агент – «Накопитель» флаг «True».
7.	Если на запрос к «Контроль» вернулся флаг «False» уточняет у него от какого «Оценщик_n» у него флаг «False» и сверяет наличие ответа у себя от данного «Оценщик_n». Если данные есть, то принудительно передает «Контроль» флаг «True». Если данные отсутствуют, повторяет отправку указанному «Оценщик_n» текста. Вносит изменения в списки и счетчик. Ждет ответа от «Контроль». При получении данных, повторно запрашивает флаги у соответствующего «Оценщик_n» и «Контроль». При получении флага «True» - передает данные в «Накопитель». При повторном получении флага «False» - прописывает лог_ошибки, передает его в накопитель. Принудительно передает флаг «True» в соответствующий «Оценщик_n» и «Контроль».
8.	Если, после отправки данных в «накопитель» от «Контроль» поступил лейбл «ревизор» и индексы соответствующих «Оценщик_n», то это значит, что эти «Оценщик_n» неверно отработали текст и седьмой агент – «Ревизор» отправил их на переработку. Формирует новый список индексов «Оценщик» и новый счетчик оценщиков. Передает обработанный текст соответствующим «Оценщик_n». Далее действует по п.5-7.
9.	При получении от «Стилист» флаг «True» (значит выдача пользователю данных проведена) всем агентам промта («Обработчик», «Лейбл», «Оценщик_n» «Контроль», «Накопитель», «Ревизор», «Стилист») передает команду на прекращение работы.
Четвертый агент – блок агентов «Оценщик».
Задачи: выделение из обработанного текста:
- «Оценщик_1» - модуля вовлеченности в виде точной фразы (группы фраз) менеджера, класс модуля вовлеченности и обобщенный результат, который он достиг данным модулем вовлеченности по итогу (смог привлечь внимание, заинтересовать клиента или наоборот спровоцировал негатив). Оценка подходит этот заход для этого разговора или нет. Модуль вовлеченности располагается в первой части разговора (от 1 до 5 фразы менеджера обычно) и представляет фразу с которой менеджер начинает разговор с ЛПР привлекая его внимание, например: «…вы, наверное, помните, мы проводили тренинг для …. Мы также можем сделать это за вас, когда вы стали старшим специалистом по администрированию», «С марта этого года введены новые требования по обучению персонала. Все ли ваши сотрудники прошли необходимое обучение?», «Мы заметили, что у вас в этом месяце запланирована проверка. Вы в курсе об этом?», «Мы работали с похожими организациями в вашем регионе по обучению по охране труда и экологии. Как у вас обстоят дела с этим направлением?», «Ваши коллеги рекомендовали нас, и мы бы хотели обсудить ваши текущие потребности в обучении.» и т.д. Условно, инфоповоды можно разделить на категории: "Упоминание о проверке", «Изменения в законодательстве», «Обучение по требованиям», "Рекомендации от других компаний", "Изменения в клиентском поле", «Новостная повестка», «Другое».;
- «Оценщик_2» - захода менеджера в разговор в виде точной фразы (группы фраз) менеджера и обобщенный результат который он достиг ей по итогу: смог привлечь внимание, уточнить ЛПР, его нахождения или как с ним связаться. Оценка подходит этот заход для этого разговора или нет;
- «Оценщик_3» - модуля вовлеченности в виде точной фразы (группы фраз) менеджера. модуля вовлеченности располагается в первой части разговора (от 1 до 5 фразы менеджера обычно) и представляет фразу с которой менеджер начинает разговор с ЛПР. менеджер может опустить полное представление и сразу начинает разговор с напоминания о ранее достигнутых договорённостях. Оценка подходит этот заход для этого разговора или нет;
- «Оценщик_4» - причин и условий «не-результата», точная фраза «не-результата» клиента и точные фразы менеджера («описание сценария») которые ему предшествовали. Описание: сколько раз менеджер пытался преодолеть возражение и с каким напором. Описание почему менеджер согласился с «не-результатом». Очень качественный и подробный анализ разговора. Основными возражениями у клиента зачастую являются: «нет времени на обучение сейчас», «все сотрудники уже обучены», «нет денег», «нам это не нужно», «не доверяем дистанционному обучению», «обучаемся в другом центре». Также зачастую клиент уходит от разговора запросом КП.;
- «Оценщик_5» - точная фраза (цикл фраз) менеджера, которая вывела на формирование заявки по клиенту. Точная фраза клиента с согласием на заявку. Описание что способствовало получению заявки: со стороны менеджера и со стороны клиента;
- «Оценщик_6» - точная фраза (цикл фраз) менеджера, которая вывела на действие. Точная фраза клиента в которой он проявлял интересы к чему-либо в предложениях от менеджера. Классификация достигнутых действий: «просмотр удостоверения» - если клиент не помнит кто у него обучен или когда; «изучение коммерческого предложения» - если выявили кто не обучен но клиенту надо согласовать финансирование на обучение; «согласование сроков» - если выявлена потребность и клиент готов обучаться но необходимо согласовать сроки обучения; «отправка(составление) списков» - если выявлена потребность и клиент готов учиться, но нужно составить списки обучающихся. Также клиент может запросить «перезвонить» или «направить КП» - но это действие клиента. Анализ разговора.;
- «Оценщик_7» - определяет, что за «другое»: новое действие, или новый тип договорённости или какие-либо действия клиента или менеджера выходящие за рамки типового общения. Если присутствует нецензурная лексика, оскорбления выделяет точные фразы и определяет относились ли они к абоненту или сказаны в отношении третью лиц. Все выявленые новые действия, интересы и т.д. выделяет точными фразами абонентов и ставит пометки «другое, относится к …» с указанием к какому типу это относится (модуль вовлеченности, убеждения, презентация, возражения, преодоления, действие, завершение разговора, нецензурное общени).
Алгоритм работы каждого «Оценщик_n»:
1.	Принимает от «Распределитель» обработанный текст.
2.	Проверяет текст по своему направлению. Подготавливает ответ.
3.	Передает поставленную задачу (один раз) и подготовленный ответ в «Контроль». Для точных фраз дополнительно указывает интервалы номеров слов в обработанном тексте.
4.	Если получает от «Контроль» флаг «True», то ставит у себя флаг «True».
5.	Если получает от «Контроль» флаг «False» и комментарий, заново изучает обработанный текст и дорабатывает свой ответ в соответствии с комментарием. Отправляет доработанный ответ в «Контроль».
6.	По запросу «Распределитель» передает имеющейся у него флаг.
7.	Если у него флаг «True» и он получает от «Распределитель» снова обработанный текст, то он передает в «Контроль» последний имеющейся у него подготовленный ответ.
8.	При получении от «Распределитель» принудительного флаг «True», ставит его у себя несмотря на действующий флаг.
Пятый агент – «Контроль»: предназначен для проверки выявления «Оценщик_n» своих задач по подготовке ответов:
1.	Получает от «Распределитель» обработанный текст и список индексов «Оценщик_n». Передает эти данные седьмой агент – «Ревизор»
2.	Ставит у себя для соответствующих «Оценщик_n» флаг «False». Создает счетчик для каждого «Оценщик_n» со значением ==3. Заводит для каждого «Оценщик_n» пустой лог_файл с проверкой результатов, куда вносит его задачу (полученную от него).
3.	Получает от «Оценщик_n» поставленную ему задачу и подготовленный ответ. Сравнивает ответ «Оценщик_n» с поставленной ему задачей, наличия и полного совпадения соответствующих фраз в обработанном тексте (по полученным индексам). Оценивает полноту ответа «Оценщик_n». Проверяет соответствие подготовленного ответа недостаткам отраженным в лог-файле. Если что-то не соответствует критериям, подготавливает комментарий что нужно доделать (переделать) и направляет соответствующему «Оценщик_n» флаг «False» и комментарий. Счетчик для соответствующего «Оценщик_n» понижает на 1. Комментарий заносится в лог_файл для соответствующего «Оценщик_n» с указанием его текущего счетчика. Доделка текста возможна каждым «Оценщик_n» до тех пор, пока его счетчик не станет ==0. Тогда его последний подготовленный ответ принимается как «соответствующий его заданию», и переходит к п.4. Но: делается пометка в лог_файле: «Контроль: Не может быть выполнено по причине (указать причину)».
4.	Если подготовленный ответ «Оценщик_n» соответствует его заданию:
a.	Передает соответствующему «Оценщик_n» флаг «True»;
b.	Передает флаг «True», индекс «Оценщик_n», последний подготовленный им ответ в «Распределитель»;
c.	Передает индекс «Оценщик_n», лог_файл для указанного «Оценщик_n» в «Ревизор»;
d.	Меняет у себя для соответствующего «Оценщик_n» флаг «False» на флаг «True».
5.	Когда все флаги для соответствующего «Оценщик_n» «True», ставит у себя общий флаг «True».
6.	По запросу «распределитель» передает свой текущий общий флаг.
7.	Если от «Ревизор» поступил флаг «False», индекс «Оценщик_n» и комментарий с пометкой «ревизор», то:
a.	Ставит у себя общий флаг «False».
b.	Ставит для соответствующих «Оценщик_n» флаг «False» и устанавливает им счетчик ==3;
c.	Передает в «Распределитель» лейбл «ревизор» и индексы соответствующих «Оценщик_n».
d.	Дополняет лог_файлы соответствующих «Оценщик_n» комментарием от «Ревизор» и считает его последним для проверки подготовленных ответов, соответствующих «Оценщик_n».
e.	Возобновляет работу в соответствии с п. 3-6. Но: если за счетчик соответствующему «Оценщик_n» не удалось устранить недостаток от «Ревизор», то делаем об этом пометку в лог_файле «Ревизор: Не может быть выполнено по причине (указать причину)».

Шестой агент – «Накопитель»:
1.	Получает данные от «Распределитель»
2.	Накапливает данные.
3.	Проводит первичную обработку текста: выделяет цитаты абонентов и комментарии агентов. Не удаляет индексы (подписи) агентов.
4.	При наличии нескольких данных от одного агента или соответствующего «Оценщик_n» оставляет только последний ответ (более ранние удаляет).
5.	Получив от «Распределитель» флаг «True», структурирует имеющиеся у него данные по агентам и передает их в «Ревизор»
Седьмой агент – «Ревизор» - предназначен для итогового контроля ответов агента «Оценщик»:
1.	Получает от «Контроль» обработанный текст и список индексов «Оценщик_n».
2.	Формирует список работающих «Оценщик_n». Ставит им флаги «False». Ставит счетчик==1. Формирует пустой ревизор_лог_файл.
3.	Получает от «Контроль» индекс «Оценщик_n» и лог_файл для указанного «Оценщик_n». Изучает лог-файл. Если в лог_файле есть комментарий «Контроль: «Не может быть выполнено по причине (причина)», то данный комментарий с индексом соответствующего «Оценщик_n» отдельно вносит ревизор_лог_файл;
4.	Получает от «Накопитель» данные в виде структурированных ответов агента «Оценщик». Разбивает их на ответы соответствующих «Оценщик_n» по индексам (подписям);
5.	Проверяет полученные от «Накопитель» данные по лог_файлам от «Контроль». Проверяет общую структуру ответа, его логическую структуру («Контроль» видит ответы от каждого «Оценщик_n», но в совокупности их не видит. Поэтому возможны логические наложения и противоречия: например, разные «Оценщик_n» посчитали одну и ту же фразу за модуль вовлеченности и за призыв к действию, или разные «Оценщик_n» по разному оценили свои блоки разговоров посчитав разговор неудачным и одновременно успешным).
6.	Если выявлены несоответствия, то:
a.	 все недостатки конкретизирует в ревизор_лог_файл с учетом общей структуры обработанного текста и ответа агентов на него. Указывает причину недостатка и способы его устранения.
b.	разбивает недостатки персонально для каждого «Оценщик_n».
c.	Передает «Контроль» комментарии для каждого «Оценщик_n» с пометкой индекса соответствующего «Оценщик_n».
d.	Ставит счетчик -=1.
e.	Получает от «Контроль» индекс «Оценщик_n» и лог_файл для указанного «Оценщик_n». Изучает лог-файл на предмет устранения сових недостатков. Если в лог_файле есть комментарий «Ревизор: «Не может быть выполнено по причине (причина)», то данный комментарий с индексом соответствующего «Оценщик_n» отдельно вносит в ревизор_лог_файл.
f.	Получает данные от «Накопитель». Заменяет данные соответствующих «Оценщик_n» на новые, старые удаляет. Проверяет общую логику ответа агентов, устранение ранее выявленных недостатков. Все неустроенные недостатки вносит в ревизор_лог_файл. Переходит к п.7.
7.	Если недостатков нет или счетчик==0:
a.	 из разделенных ответов соответствующих «Оценщик_n»  (п. 4) заново структурирует общий ответ (с учетом устранения выявленных недостатков). Убирает из него привязку к агентам. Создает единую логичную структуру
b.	Из ревизор_лог_файл  выделяет свои из комментарии по не удалённым недостаткам, а также или комментарии о невозможности исполнения от «Контроль», обобщает их в единую смысловую структуру, оптимизирует, добавляет причины не отработки данных ошибок.
c.	Структурированный ответ и комментарий передает в восьмой агент - «Стилист».
8.	Ставит у себя общий флаг «True»
Восьмой агент - «Стилист» - предназначен для итоговой подготовки ответа пользователю.
Задачи:
1.	Получение и анализ данных:
o	От агента "Лейбл":
	Если получены данные с пометкой "короткий" или сочетание пометок ("теплый" И "нет ЛПР"), агент "Стилист" формирует ответ пользователю с указанием соответствующих примечаний:
	"Короткий разговор" — если разговор слишком короткий для дальнейшего анализа.
	"Разговор с теплым клиентом без достижения ЛПР" — если разговор был с теплым клиентом, но не удалось связаться с лицом, принимающим решение (ЛПР).
	В этом случае агент завершает работу и передает результат пользователю в формате JSON.
o	От агента "Ревизор":
	Подготовка стилистики текста:
	Агент оформляет информацию в логичной и последовательной форме, соблюдая профессиональный стиль.
	Убирает технические детали и внутренние пометки, кроме комментариев от "Ревизор".
	Интеграция комментариев:
	Включает имеющиеся комментарии от "Ревизор" в соответствующие блоки текста.
	Комментарии оформляются таким образом, чтобы не нарушать целостность отчета и быть понятными пользователю.
	Формирование логического ответа:
	Создает связный и структурированный отчет, отражающий результаты анализа.
	Важно: Цитаты из текста не должны изменяться и должны полностью соответствовать исходному формату.
	Завершение работы:
	Передает флаг "True" агенту "Распределитель", сигнализируя о завершении своей работы.
2.	Вывод данных:
o	Формат JSON:
	Итоговый отчет формируется в формате JSON для удобства восприятия и возможности дальнейшей обработки.
	Структура JSON должна быть логичной и содержать следующие ключи:
	"summary" — краткое резюме результатов.
	"details" — подробная информация с разделением по блокам.
	"comments" — включение комментариев от "Ревизор".
	"quotes" — цитаты из исходного текста.
Алгоритм работы агента "Стилист":
1.	Получение данных:
o	Принимает данные от агентов "Лейбл" или "Ревизор".
2.	Проверка и анализ:
o	Определяет источник данных и соответствующие действия.
o	Если данные от "Лейбл" с пометкой "короткий" или ("теплый" И "нет ЛПР"), переходит к формированию простого ответа.
o	Если данные от "Ревизор", приступает к подробной стилистической обработке.
3.	Обработка данных:
o	Для коротких или неполных разговоров:
	Формирует сообщение с соответствующим примечанием.
{
  "summary": "Короткий разговор",
  "details": null
}
o	Для полноценного отчета:
	Структурирует информацию по разделам.
	Включает комментарии от "Ревизор" в соответствующие места.
	Обеспечивает сохранение оригинальных цитат без изменений.
4.	Формирование отчета:
o	Собирает все элементы в единый JSON-документ.
o	Проверяет корректность структуры и форматирования.
5.	Завершение работы:
o	Передает флаг "True" агенту "Распределитель".
o	Выдает итоговый отчет пользователю.


четвертый агент – блок из семи агентов «Оценщик» с индексом («Оценщик_1» - работает при по лейблам «холодный», «разговор с лпр»; «Оценщик_2» - работает по лейблам «холодный», «нет лпр»; «Оценщик_3» - работает по лейблам «теплый», «разговор с лпр»; «Оценщик_4» - работает по лейблу «отказ»; «Оценщик_5» - работает по лейблу «заявка»; «Оценщик_6» - работает по лейблу «действие»; «Оценщик_7» - работает по лейблу «другое»), пятый агент – «Контроль», шестой агент – «Накопитель», седьмой агент – «Ревизор», восьмой агент - «Стилист».
